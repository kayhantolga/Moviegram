// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Moviegram.Persistence.DbContexts;

namespace Moviegram.Persistence.Migrations
{
    [DbContext(typeof(MoviegramDbContext))]
    [Migration("20190509175651_1-init")]
    partial class _1init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Moviegram.Domain.Entities.Celebrity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("ProfilePhoto");

                    b.HasKey("Id");

                    b.ToTable("Celebrities");
                });

            modelBuilder.Entity("Moviegram.Domain.Entities.Movie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Genre");

                    b.Property<string>("Poster");

                    b.Property<string>("Title")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("Moviegram.Domain.Entities.MovieCelebrity", b =>
                {
                    b.Property<Guid>("CelebrityId");

                    b.Property<Guid>("MovieId");

                    b.HasKey("CelebrityId", "MovieId");

                    b.HasIndex("MovieId");

                    b.ToTable("MovieCelebrities");
                });

            modelBuilder.Entity("Moviegram.Domain.Entities.MovieShowTime", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("MovieId");

                    b.Property<DateTime>("ShowTimeEnd");

                    b.Property<DateTime>("ShowTimeStart");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("MovieShowTimes");
                });

            modelBuilder.Entity("Moviegram.Domain.Entities.MovieCelebrity", b =>
                {
                    b.HasOne("Moviegram.Domain.Entities.Celebrity", "Celebrity")
                        .WithMany("Movies")
                        .HasForeignKey("CelebrityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Moviegram.Domain.Entities.Movie", "Movie")
                        .WithMany("Actors")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Moviegram.Domain.Entities.MovieShowTime", b =>
                {
                    b.HasOne("Moviegram.Domain.Entities.Movie", "Movie")
                        .WithMany("MovieShowTimes")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
